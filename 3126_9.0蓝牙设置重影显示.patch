diff --git a/packages/apps/Settings/src/com/android/settings/bluetooth/BluetoothDevicePreference.java b/packages/apps/Settings/src/com/android/settings/bluetooth/BluetoothDevicePreference.java
index 2cc6233..4943e03 100644
--- a/packages/apps/Settings/src/com/android/settings/bluetooth/BluetoothDevicePreference.java
+++ b/packages/apps/Settings/src/com/android/settings/bluetooth/BluetoothDevicePreference.java
@@ -37,9 +37,9 @@ import com.android.settings.overlay.FeatureFactory;
 import com.android.settings.widget.GearPreference;
 import com.android.settingslib.bluetooth.CachedBluetoothDevice;
 import com.android.settingslib.core.instrumentation.MetricsFeatureProvider;
-
+import android.os.SystemProperties;
 import static android.os.UserManager.DISALLOW_CONFIG_BLUETOOTH;
-
+import android.support.v7.widget.RecyclerView;
 /**
  * BluetoothDevicePreference is the preference type used to display each remote
  * Bluetooth device in the Bluetooth Settings screen.
@@ -59,14 +59,21 @@ public final class BluetoothDevicePreference extends GearPreference implements
     private boolean mHideSecondTarget = false;
     /* Talk-back descriptions for various BT icons */
     Resources mResources;
-
+    private long mLastTime;
+    private boolean mIconLoaded;
+    private boolean mIsLowDevice;
     public BluetoothDevicePreference(Context context, CachedBluetoothDevice cachedDevice,
             boolean showDeviceWithoutNames) {
         super(context, null);
         mResources = getContext().getResources();
         mUserManager = (UserManager) context.getSystemService(Context.USER_SERVICE);
         mShowDevicesWithoutNames = showDeviceWithoutNames;
-
+        /* if ("rk3126c".equals(SystemProperties.get("ro.board.platform"))) {
+            RecyclerView listView = (RecyclerView)getContext().findViewById(com.android.settings.R.id.list);
+            if (null != listView) {
+                listView.setItemAnimator(null);
+            }
+        }*/
         if (sDimAlpha == Integer.MIN_VALUE) {
             TypedValue outValue = new TypedValue();
             context.getTheme().resolveAttribute(android.R.attr.disabledAlpha, outValue, true);
@@ -75,7 +82,7 @@ public final class BluetoothDevicePreference extends GearPreference implements
 
         mCachedDevice = cachedDevice;
         mCachedDevice.registerCallback(this);
-
+        mIsLowDevice = "rk3126c".equals(SystemProperties.get("ro.board.platform"));
         onDeviceAttributesChanged();
     }
 
@@ -124,6 +131,13 @@ public final class BluetoothDevicePreference extends GearPreference implements
          * changed before proceeding. It will also call notifyChanged() if
          * any preference info has changed from the previous value.
          */
+         if (mIsLowDevice) {
+            long currentTime = System.currentTimeMillis();
+            if (currentTime - mLastTime < 2000) {
+                return;
+            }
+            mLastTime = currentTime;
+        }
         setTitle(mCachedDevice.getName());
         // Null check is done at the framework
         setSummary(mCachedDevice.getConnectionSummary());
@@ -134,7 +148,18 @@ public final class BluetoothDevicePreference extends GearPreference implements
             setIcon(pair.first);
             contentDescription = pair.second;
         }
-
+       /* if (mDeviceListPreferenceFragment instanceof BluetoothPairingDetail
+                && mIconLoaded && mIsLowDevice){
+
+        } else {
+            final Pair<Drawable, String> pair = com.android.settingslib.bluetooth.Utils.getBtClassDrawableWithDescription(getContext(),
+                    mCachedDevice);
+            if (pair.first != null) {
+                setIcon(pair.first);
+                mIconLoaded = true;
+                contentDescription = pair.second;
+            }
+        }*/
         // Used to gray out the item
         setEnabled(!mCachedDevice.isBusy());
 
@@ -144,12 +169,16 @@ public final class BluetoothDevicePreference extends GearPreference implements
 
         // This could affect ordering, so notify that
         notifyHierarchyChanged();
+        if (!mIsLowDevice) {
+            notifyHierarchyChanged();
+        }
     }
 
     @Override
     public void onBindViewHolder(PreferenceViewHolder view) {
         // Disable this view if the bluetooth enable/disable preference view is off
-        if (null != findPreferenceInHierarchy("bt_checkbox")) {
+        //if (null != findPreferenceInHierarchy("bt_checkbox")) {
+        if (!mIsLowDevice && null != findPreferenceInHierarchy("bt_checkbox")) {
             setDependency("bt_checkbox");
         }
 
@@ -183,8 +212,9 @@ public final class BluetoothDevicePreference extends GearPreference implements
 
     @Override
     public int compareTo(Preference another) {
-        if (!(another instanceof BluetoothDevicePreference)) {
-            // Rely on default sort
+       // if (!(another instanceof BluetoothDevicePreference)) {
+        if (mIsLowDevice || !(another instanceof BluetoothDevicePreference)) {     
+       // Rely on default sort
             return super.compareTo(another);
         }
 
diff --git a/packages/apps/Settings/src/com/android/settings/bluetooth/BluetoothPairingDetail.java b/packages/apps/Settings/src/com/android/settings/bluetooth/BluetoothPairingDetail.java
index 1ab7f87..2245d63 100644
--- a/packages/apps/Settings/src/com/android/settings/bluetooth/BluetoothPairingDetail.java
+++ b/packages/apps/Settings/src/com/android/settings/bluetooth/BluetoothPairingDetail.java
@@ -31,6 +31,8 @@ import com.android.settings.search.Indexable;
 import com.android.settingslib.bluetooth.BluetoothDeviceFilter;
 import com.android.settingslib.bluetooth.CachedBluetoothDevice;
 import com.android.settingslib.widget.FooterPreference;
+import android.os.SystemProperties;
+import android.support.v7.widget.RecyclerView;
 
 /**
  * BluetoothPairingDetail is a page to scan bluetooth devices and pair them.
@@ -62,6 +64,12 @@ public class BluetoothPairingDetail extends DeviceListPreferenceFragment impleme
         super.onActivityCreated(savedInstanceState);
         mInitialScanStarted = false;
         mAlwaysDiscoverable = new AlwaysDiscoverable(getContext(), mLocalAdapter);
+        if ("rk3126c".equals(SystemProperties.get("ro.board.platform"))) {
+            RecyclerView listView = (RecyclerView)getActivity().findViewById(com.android.settings.R.id.list);
+            if (null != listView) {
+                listView.setItemAnimator(null);
+            }
+        }
     }
 
     @Override
