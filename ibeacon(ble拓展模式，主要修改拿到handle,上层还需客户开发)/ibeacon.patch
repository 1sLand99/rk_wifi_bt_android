frameworks/base/core/res/res/values/config.xml
config_bluetooth_le_peripheral_mode_supported = true
如果device/rockchip/common/overlay/packages/apps/Bluetooth/res/values/config.xml中也有定义config_bluetooth_le_peripheral_mode_supported的话，也要修改
mmm packages/apps/Bluetooth/ -B

2. (AP6330不需要这个修改)
如果是android 6.0修改system/bt/include/bt_target.h
如果是android 5.x broadcom bt(AP6xxx)修改external/bluetooth/bluedroid/include/bt_target.h
如果是android 5.x realtek bt修改external/bluetooth_rtk/bluedroid/include/bt_target.h
diff --git a/include/bt_target.h b/include/bt_target.h
index 66b5f98..62da51b 100644
--- a/include/bt_target.h
++ b/include/bt_target.h
-1339,7 +1339,7 and USER_HW_DISABLE_API macros / * feature discovery, multi-adv etc.
/
#ifndef BLE_VND_INCLUDED
-#define BLE_VND_INCLUDED FALSE
+#define BLE_VND_INCLUDED TRUE
#endif
mmm external/bluetooth/bluedroid
mmm system/bt/

判断是否支持Advertiser的代码如下：
frameworks/base/core/java/android/bluetooth/BluetoothAdapter.java
    public BluetoothLeAdvertiser getBluetoothLeAdvertiser() {
        if (!getLeAccess()) return null;
        if (!isMultipleAdvertisementSupported() && !isPeripheralModeSupported()) {
            Log.e(TAG, "Bluetooth LE advertising not supported");
            return null;
        }
        synchronized(mLock) {
            if (sBluetoothLeAdvertiser == null) {
                sBluetoothLeAdvertiser = new BluetoothLeAdvertiser(mManagerService);
            }
        }
        return sBluetoothLeAdvertiser;
    }

有可能出现：isPeripheralModeSupported生效为true，
但isMultipleAdvertisementSupported无效为false（可通过log: E/bt-btif ( 2310): bta_dm_ctrl_features_rd_cmpl_cback Ctrl BLE feature read failed: status :1来确认)，
导致配置不生效。
可按如下修正：

frameworks/base$ git diff core/java/android/bluetooth/BluetoothAdapter.java
diff --git a/core/java/android/bluetooth/BluetoothAdapter.java b/core/java/android/bluetooth/BluetoothAdapter.java
index 1f3ff51..97e440c 100644
--- a/core/java/android/bluetooth/BluetoothAdapter.java
+++ b/core/java/android/bluetooth/BluetoothAdapter.java
@@ -570,7 +570,7 @@ public final class BluetoothAdapter {
      */
     public BluetoothLeAdvertiser getBluetoothLeAdvertiser() {
         if (!getLeAccess()) return null;
-        if (!isMultipleAdvertisementSupported() && !isPeripheralModeSupported()) {
+        if (/*!isMultipleAdvertisementSupported() &&*/ !isPeripheralModeSupported()) {
             Log.e(TAG, "Bluetooth LE advertising not supported");
             return null;
         }
